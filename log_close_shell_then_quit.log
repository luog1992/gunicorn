# 启动一个worker, 然后关闭终端, 最后使用kill -QUIT杀死进程

# 启动master
[65871] [INFO] [39m     {140735730451328} proc_name: app:app
[65871] [INFO] [39m     {140735730451328} run
[65871] [INFO] Starting gunicorn 20.0.0
[65871] [INFO] [39m     {140735730451328} init_signals
[65871] [INFO] Listening at: http://127.0.0.1:8000 (65871)
[65871] [INFO] Using worker: sync
[65871] [INFO] [39m     {140735730451328} spawn_workers
[65871] [INFO] [39m     {140735730451328} SP_WKS> spawn_worker
[65871] [INFO] [39m     {140735730451328} spawn_worker before fork
[65871] [INFO] [39m     {140735730451328} spawn_worker after fork

# 启动worker
[65874] [INFO] [36m     {140735730451328} spawn_worker after fork
[65874] [INFO] Booting worker with pid: 65874
[65874] [INFO] [36m >>> {140735730451328} spawn_worker before worker init_process
[65874] [INFO] [36m >>> {140735730451328} init_process
[65874] [INFO] [36m >>> {140735730451328} init_signals
[65874] [INFO] [36m >>> {140735730451328} load_wsgi

# ⚠️ 关闭终端

# todo: 为啥收到了两次SIGHUP📶?
[65871] [INFO [39m     {140735730451328} signal sig=1 & wakeup
[65871] [INFO] [39m     {140735730451328} SIG1> wakeup
[65871] [INFO] [39m     {140735730451328} signal sig=1 & wakeup
[65871] [INFO] [39m     {140735730451328} SIG1> wakeup
[65871] [INFO] [39m     {140735730451328} sleep except [Errno 35] Resource temporarily unavailable

# 处理第一个 SIGHUP📶
[65871] [INFO] [39m     {140735730451328} run got sig=1                        # ❌
[65871] [INFO] [39m     {140735730451328} handle_hup & reload
[65871] [INFO] [39m     {140735730451328} reload

# worker退出, 为什么worker中没有记录收到SIGHUP的日志?
[65871] [INFO] [39m     {140735730451328} handle_chld & reap_workers & wakeup
[65871] [INFO] [39m     {140735730451328} H_CHLD> reap_workers
[65871] [INFO] [39m     {140735730451328} H_CHLD> wakeup

# 重新spawn workers
[65871] [INFO] [39m     {140735730451328} RELOAD> spawn_worker
[65871] [INFO] [39m     {140735730451328} spawn_worker before fork
[65871] [INFO] [39m     {140735730451328} spawn_worker after fork              # ✔️

[65871] [INFO] [39m     {140735730451328} run will wakeup  # 此处接 ❌
[65871] [INFO] [39m     {140735730451328} RUN> wakeup

# 处理第二个 SIGHUP
[65871] [INFO] [39m     {140735730451328} run got sig=1
[65871] [INFO] [39m     {140735730451328} handle_hup & reload
[65871] [INFO] [39m     {140735730451328} reload                               # ❤️

# ✔️ 处启动的worker
[65901] [INFO] [32m     {140735730451328} spawn_worker after fork
[65901] [INFO] Booting worker with pid: 65901
[65901] [INFO] [32m +++ {140735730451328} spawn_worker before worker init_process
[65901] [INFO] [32m +++ {140735730451328} init_process
[65901] [INFO] [32m +++ {140735730451328} init_signals
[65901] [INFO] [32m +++ {140735730451328} load_wsgi

[65871] [INFO] [39m     {140735730451328} RELOAD> spawn_worker     # 此处接 ❤️
[65871] [INFO] [39m     {140735730451328} spawn_worker before fork
[65871] [INFO] [39m     {140735730451328} spawn_worker after fork              # 🍀

# 🍀 处启动新的worker, 然后kill了 ✔️ 处启动的worker? 为啥子要这么搞嘞?
[65871] [INFO] [39m     {140735730451328} MN_WKS> kill_worker pid=65901 Signals.SIGTERM
## [65871] [INFO] [39m     {140735730451328} run will wakeup
## [65871] [INFO] [39m     {140735730451328} RUN> wakeup
[65901] [INFO] [32m +++ {140735730451328} handle_exit: 15
[65871] [INFO] [39m     {140735730451328} sleep except [Errno 35] Resource temporarily unavailable
[65871] [INFO] [39m     {140735730451328} MN_WKS> kill_worker pid=65901 Signals.SIGTERM
[65901] [INFO] [32m +++ {140735730451328} handle_exit: 15

# 🍀 处新启动的worker
[65902] [INFO] [34m     {140735730451328} spawn_worker after fork
[65902] [INFO] Booting worker with pid: 65902
[65902] [INFO] [34m *** {140735730451328} spawn_worker before worker init_process
[65902] [INFO] [34m *** {140735730451328} init_process
[65902] [INFO] [34m *** {140735730451328} init_signals
[65902] [INFO] [34m *** {140735730451328} load_wsgi

# ✔️ 处启动的worker退出
[65901] [INFO] [32m +++ {140735730451328} spawn_worker after worker init_process
[65901] [INFO] [32m +++ {140735730451328} spawn_worker except SystemExit
[65901] [INFO] [32m +++ {140735730451328} spawn_worker finally worker exiting
[65901] [INFO] Worker exiting (pid: 65901)
[65901] [INFO] [32m     {140735730451328} run except3: SystemExit

# master处理 ✔️ 处worker的退出
[65871] [INFO] [39m     {140735730451328} handle_chld & reap_workers & wakeup
[65871] [INFO] [39m     {140735730451328} H_CHLD> reap_workers
[65871] [INFO] [39m     {140735730451328} H_CHLD> wakeup
[65871] [INFO] [39m     {140735730451328} sleep except [Errno 35] Resource temporarily unavailable

# ⚠️ 使用 kill -QUIT 退出进程

# 收到 SIGQUIT📶
[65871] [INFO] [39m     {140735730451328} signal sig=3 & wakeup
[65871] [INFO] [39m     {140735730451328} SIG3> wakeup
[65871] [INFO] [39m     {140735730451328} sleep except [Errno 35] Resource temporarily unavailable
[65871] [INFO] [39m     {140735730451328} run got sig=3
[65871] [INFO] [39m     {140735730451328} handle_quit & stop & StopIteration   # 👠
# 调用 stop
[65871] [INFO] [39m     {140735730451328} H_QUIT> stop graceful=False
[65871] [INFO] [39m     {140735730451328} stop will SIGQUIT workers            # 😈
[65871] [INFO] [39m     {140735730451328} H_QUIT>STOP> kill_workers: Signals.SIGQUIT
[65871] [INFO] [39m     {140735730451328} H_QUIT>STOP>KL_WKS> kill_worker pid=65902 Signals.SIGQUIT
# worker退出
[65902] [INFO] [34m *** {140735730451328} handle_quit: 3 sys.exit(0)
[65902] [INFO] [34m *** {140735730451328} spawn_worker except SystemExit
[65902] [INFO] [34m *** {140735730451328} spawn_worker finally worker exiting
[65902] [INFO] Worker exiting (pid: 65902)
[65902] [INFO] [34m     {140735730451328} run except3: SystemExit
# master 处理 worker 退出
[65871] [INFO] [39m     {140735730451328} handle_chld & reap_workers & wakeup
[65871] [INFO] [39m     {140735730451328} H_CHLD> reap_workers
[65871] [INFO] [39m     {140735730451328} H_CHLD> wakeup

[65871] [INFO] [39m     {140735730451328} stop will SIGKILL workers    # 此处接 😈
[65871] [INFO] [39m     {140735730451328} H_QUIT>STOP> kill_workers: Signals.SIGKILL

[65871] [INFO] [39m     {140735730451328} run except1: StopIteration   # 👠 处的异常
[65871] [INFO] [39m     {140735730451328} RUN> halt reason=None exit_status=0
[65871] [INFO] [39m     {140735730451328} RUN>HALT> stop graceful=True
[65871] [INFO] [39m     {140735730451328} stop will SIGTERM workers
[65871] [INFO] [39m     {140735730451328} RUN>HALT>STOP> kill_workers: Signals.SIGTERM
[65871] [INFO] [39m     {140735730451328} stop will SIGKILL workers
[65871] [INFO] [39m     {140735730451328} RUN>HALT>STOP> kill_workers: Signals.SIGKILL
[65871] [INFO]      {140735730451328} Shutting down Master

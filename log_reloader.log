# Áî±‰∫é‰øÆÊîπÊñá‰ª∂ÂØºËá¥workerÈáçÂêØÊó•ÂøóÂàÜÊûê
# ÂêØÂä®ÂëΩ‰ª§: gunicorn -w 1 -k sync --error-logfile .error.log --reload-extra-file app.py --reload app:app

# ÂêØÂä®masterüßì
[16340] [INFO] [39m     {140736069624704} setup
[16340] [INFO] [39m     {140736069624704} setup proc_name: app:app
[16340] [INFO] [39m     {140736069624704} run
[16340] [INFO] [39m     {140736069624704} start Starting gunicorn 20.0.0
[16340] [INFO] [39m     {140736069624704} start master Master master_pid=0 reexec_pid=0
[16340] [INFO] [39m     {140736069624704} init_signals
[16340] [INFO] [39m     {140736069624704} create listeners fds=None
[16340] [INFO] [39m     {140736069624704} Listening at: http://127.0.0.1:8000 (16340)
[16340] [INFO] [39m     {140736069624704} Using worker: sync
[16340] [INFO] [39m     {140736069624704} spawn_workers
[16340] [INFO] [39m     {140736069624704} SP_WKS> spawn_worker
[16340] [INFO] [39m     {140736069624704} spawn_worker before fork
[16340] [INFO] [39m     {140736069624704} spawn_worker after fork

# ÂêØÂä®workerüë∑
[16343] [INFO] [33m     {140736069624704} spawn_worker after fork
[16343] [INFO] [33m     {140736069624704} Booting worker with pid: 16343
[16343] [INFO] [33m === {140736069624704} spawn_worker before worker init_process
[16343] [INFO] [33m === {140736069624704} init_process
[16343] [INFO] [33m === {140736069624704} init_signals
[16343] [INFO] [33m === {140736069624704} load_wsgi

# ‰øÆÊîπapp.pyÂØºËá¥reload
[16343] [INFO] [33m === {123145319940096} reload worker fname=/Users/xianyu/prjs/gunicorn/app.py
[16343] [INFO] [33m === {140736069624704} spawn_worker after worker init_process
[16343] [INFO] [33m === {140736069624704} spawn_worker except SystemExit
[16343] [INFO] [33m === {140736069624704} spawn_worker finally worker exiting
# masterÁöÑrunÊñπÊ≥ï‰∏≠Êî∂Âà∞ SystemExit
[16343] [INFO] [33m     {140736069624704} run except3: SystemExit

# master handle workerËøõÁ®ãÈÄÄÂá∫‰ø°Âè∑üì∂
[16340] [INFO] [39m     {140736069624704} handle_chld & reap_workers & wakeup
[16340] [INFO] [39m     {140736069624704} H_CHLD> reap_workers
[16340] [INFO] [39m     {140736069624704} H_CHLD> reap_workers wpid=16343 reexec_pid=0 master_pid=0
[16340] [INFO] [39m     {140736069624704} H_CHLD> wakeup
[16340] [INFO] [39m     {140736069624704} sleep except [Errno 35] Resource temporarily unavailable

# masterÈáçÊñ∞ÂêØÂä®‰∏Ä‰∏™worker
[16340] [INFO] [39m     {140736069624704} spawn_workers
[16340] [INFO] [39m     {140736069624704} SP_WKS> spawn_worker
[16340] [INFO] [39m     {140736069624704} spawn_worker before fork
[16340] [INFO] [39m     {140736069624704} spawn_worker after fork

# Êñ∞ÂêØÂä®ÁöÑworkerüë∑
[16358] [INFO] [33m     {140736069624704} spawn_worker after fork
[16358] [INFO] [33m     {140736069624704} Booting worker with pid: 16358
[16358] [INFO] [33m === {140736069624704} spawn_worker before worker init_process
[16358] [INFO] [33m === {140736069624704} init_process
[16358] [INFO] [33m === {140736069624704} init_signals
[16358] [INFO] [33m === {140736069624704} load_wsgi
